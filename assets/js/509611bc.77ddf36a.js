"use strict";(self.webpackChunkml_notebook=self.webpackChunkml_notebook||[]).push([[5140],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return y}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=c(n),y=o,d=f["".concat(s,".").concat(y)]||f[y]||u[y]||a;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},55337:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return f},contentTitle:function(){return y},metadata:function(){return d},toc:function(){return m},default:function(){return v}});var r=n(3905),o=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&p(e,n,t[n]);if(l)for(var n of l(t))c.call(t,n)&&p(e,n,t[n]);return e};const f={sidebar_position:5},y="AlexNet\u4ee3\u7801\u5b9e\u73b0",d={unversionedId:"ch2p2/[5]AlexNet-code",id:"ch2p2/[5]AlexNet-code",isDocsHomePage:!1,title:"AlexNet\u4ee3\u7801\u5b9e\u73b0",description:"\u8fd9\u91cc\u4e0d\u4f1a\u5305\u542b\u4efb\u4f55\u8bb2\u89e3\u7684\u5185\u5bb9\uff0c\u8bb2\u89e3\u7684\u5185\u5bb9\u8bf7\u53c2\u8003AlexNet\uff1a\u66f4\u6df1\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edcAlexNet.md)\u3002",source:"@site/docs/ch2p2/[5]AlexNet-code.md",sourceDirName:"ch2p2",slug:"/ch2p2/[5]AlexNet-code",permalink:"/ch2p2/[5]AlexNet-code",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docsSidebar",previous:{title:"AlexNet\uff1a\u66f4\u6df1\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc",permalink:"/ch2p2/[4]AlexNet"},next:{title:"\u6807\u51c6\u5316\u5c42\u548c\u6fc0\u6d3b\u5c42\u7684\u987a\u5e8f\u95ee\u9898",permalink:"/ch2p2/[6]the-sequence-order-between-bn-and-activations"}},m=[],b={toc:m};function v(e){var t,n=e,{components:o}=n,p=((e,t)=>{var n={};for(var r in e)s.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&l)for(var r of l(e))t.indexOf(r)<0&&c.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=u(u({},b),p),a(t,i({components:o,mdxType:"MDXLayout"}))),(0,r.kt)("h1",u({},{id:"alexnet\u4ee3\u7801\u5b9e\u73b0"}),"AlexNet\u4ee3\u7801\u5b9e\u73b0"),(0,r.kt)("p",null,"\u8fd9\u91cc\u4e0d\u4f1a\u5305\u542b\u4efb\u4f55\u8bb2\u89e3\u7684\u5185\u5bb9\uff0c\u8bb2\u89e3\u7684\u5185\u5bb9\u8bf7\u53c2\u8003",(0,r.kt)("a",u({parentName:"p"},{href:"./%5B4%5DAlexNet.md"}),"AlexNet\uff1a\u66f4\u6df1\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-python"}),"\u5206\u7c7bimport tensorflow as tf\nfrom tensorflow.keras import layers, datasets, Sequential\n\n(training_x, training_y), (testing_x, testing_y) = datasets.cifar10.load_data()\ntraining_x = (training_x.astype('float32') / 255.)\ntesting_x = (testing_x.astype('float32') / 255.)\n\nmodel = Sequential([\n    # \u7b2c\u4e00\u5c42\u5377\u79ef\n    layers.Conv2D(filters=96, kernel_size=(3, 3)),\n    # \u7b2c\u4e00\u5c42\u5377\u79ef\u5177\u6709BN\u5c42\n    layers.BatchNormalization(),\n    layers.Activation('relu'),\n    layers.MaxPool2D(pool_size=(3, 3), strides=2),\n    # \u7b2c\u4e8c\u5c42\u5377\u79ef\n    layers.Conv2D(filters=256, kernel_size=(3, 3)),\n    # \u7b2c\u4e8c\u5c42\u5377\u79ef\u5177\u6709BN\u5c42\n    layers.BatchNormalization(),\n    layers.Activation('relu'),\n    layers.MaxPool2D(pool_size=(3, 3), strides=2),\n    # \u7b2c\u4e09\u5c42\u5377\u79ef\uff0c\u5e76\u6ca1\u6709BN\u5c42\uff0c\u4e5f\u6ca1\u6709\u6c60\u5316\n    layers.Conv2D(filters=384, kernel_size=(3, 3), padding='same',\n                  activation='relu'),\n    # \u7b2c\u56db\u5c42\u5377\u79ef\uff0c\u5e76\u6ca1\u6709BN\u5c42\uff0c\u4e5f\u6ca1\u6709\u6c60\u5316\n    layers.Conv2D(filters=384, kernel_size=(3, 3), padding='same',\n                  activation='relu'),\n    # \u7b2c\u4e94\u5c42\u5377\u79ef\uff0c\u5e76\u6ca1\u6709BN\u5c42\n    layers.Conv2D(filters=256, kernel_size=(3, 3), padding='same',\n                  activation='relu'),\n    layers.MaxPool2D(pool_size=(3, 3), strides=2),\n    # \u6253\u5e73\u8fdb\u5165\u5168\u8fde\u63a5\u8fdb\u884c\u5206\u7c7b\n    layers.Flatten(),\n    layers.Dense(2048, activation='relu'),\n    layers.Dropout(0.5),\n    layers.Dense(2048, activation='relu'),\n    layers.Dropout(0.5),\n    layers.Dense(10, activation='softmax')\n])\n\nmodel.compile(optimizer='adam',\n              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=False),\n              metrics=['sparse_categorical_accuracy'])\n\nmodel.fit(training_x, training_y, batch_size=32, epochs=20, validation_data=(testing_x, testing_y))\n")))}v.isMDXComponent=!0}}]);